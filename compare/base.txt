    case 0x00: // addb A, A
    case 0x01: // addb A, B
    case 0x02: // addb A, %(i8)s
    case 0x03: // addb A, [HL]
    case 0x04: // addb A, [NN+%(i8)s]
    case 0x05: // addb A, [%(i16)s]
    case 0x06: // addb A,[X1]
    case 0x07: // addb A,[X2]
    case 0x08: // addcb A,A
    case 0x09: // addcb A,B
    case 0x0A: // addcb A,%(i8)s
    case 0x0B: // addcb A,[HL]
    case 0x0C: // addcb A,[NN+%(i8)s]
    case 0x0D: // addcb A,[%(i16)s]
    case 0x0E: // addcb A,[X1]
    case 0x0F: // addcb A,[X2]
    case 0x10: // subb A, A
    case 0x11: // subb A, B
    case 0x12: // subb A, %(i8)s
    case 0x13: // subb A, [HL]
    case 0x14: // subb A, [NN+%(i8)s]
    case 0x15: // subb A, [%(i16)s]
    case 0x16: // subb A,[X1]
    case 0x17: // subb A,[X2]
    case 0x18: // subcb A,A
    case 0x19: // subcb A,B
    case 0x1A: // subcb A,%(i8)s
    case 0x1B: // subcb A,[HL]
    case 0x1C: // subcb A,[NN+%(i8)s]
    case 0x1D: // subcb A,[%(i16)s]
    case 0x1E: // subcb A,[X1]
    case 0x1F: // subcb A,[X2]
    case 0x20: // andb A,A
    case 0x21: // andb A,B
    case 0x22: // andb A,%(i8)s
    case 0x23: // andb A,[HL]
    case 0x24: // andb A,[NN+%(i8)s]
    case 0x25: // andb A,[%(i16)s]
    case 0x26: // andb A,[X1]
    case 0x27: // andb A,[X2]
    case 0x28: // orb A,A
    case 0x29: // orb A,B
    case 0x2A: // orb A,%(i8)s
    case 0x2B: // orb A,[HL]
    case 0x2C: // orb A,[NN+%(i8)s]
    case 0x2D: // orb A,[%(i16)s]
    case 0x2E: // orb A,[X1]
    case 0x2F: // orb A,[X2]
    case 0x30: // cmpb A,A
    case 0x31: // cmpb A,B
    case 0x32: // cmpb A,%(i8)s
    case 0x33: // cmpb A,[HL]
    case 0x34: // cmpb A,[NN+%(i8)s]
    case 0x35: // cmpb A,[%(i16)s]
    case 0x36: // cmpb A,[X1]
    case 0x37: // cmpb A,[X2]
    case 0x38: // xorb A,A
    case 0x39: // xorb A,B
    case 0x3A: // xorb A,%(i8)s
    case 0x3B: // xorb A,[HL]
    case 0x3C: // xorb A,[NN+%(i8)s]
    case 0x3D: // xorb A,[%(i16)s]
    case 0x3E: // xorb A,[X1]
    case 0x3F: // xorb A,[X2]
    case 0x40: // movb A,A
    case 0x41: // movb A,B
    case 0x42: // movb A,L
    case 0x43: // movb A,H
    case 0x44: // movb A,[NN+%(i8)s]
    case 0x45: // movb A,[HL]
    case 0x46: // movb A,[X1]
    case 0x47: // movb A,[X2]
    case 0x48: // movb B,A
    case 0x49: // movb B,B
    case 0x4A: // movb B,L
    case 0x4B: // movb B,H
    case 0x4C: // movb B,[NN+%(i8)s]
    case 0x4D: // movb B,[HL]
    case 0x4E: // movb B,[X1]
    case 0x4F: // movb B,[X2]
    case 0x50: // movb L,A
    case 0x51: // movb L,B
    case 0x52: // movb L,L
    case 0x53: // movb L,H
    case 0x54: // movb L,[NN+%(i8)s]
    case 0x55: // movb L,[HL]
    case 0x56: // movb L,[X1]
    case 0x57: // movb L,[X2]
    case 0x58: // movb H,A
    case 0x59: // movb H,B
    case 0x5A: // movb H,L
    case 0x5B: // movb H,H
    case 0x5C: // movb H,[NN+%(i8)s]
    case 0x5D: // movb H,[HL]
    case 0x5E: // movb H,[X1]
    case 0x5F: // movb H,[X2]
    case 0x60: // movb [X1],A
    case 0x61: // movb [X1],B
    case 0x62: // movb [X1],L
    case 0x63: // movb [X1],H
    case 0x64: // movb [X1],[NN+%(i8)s]
    case 0x65: // movb [X1],[HL]
    case 0x66: // movb [X1],[X1]
    case 0x67: // movb [X1],[X2]
    case 0x68: // movb [HL],A
    case 0x69: // movb [HL],B
    case 0x6A: // movb [HL],L
    case 0x6B: // movb [HL],H
    case 0x6C: // movb [HL],[NN+%(i8)s]
    case 0x6D: // movb [HL],[HL]
    case 0x6E: // movb [HL],[X1]
    case 0x6F: // movb [HL],[X2]
    case 0x70: // movb [X2],A
    case 0x71: // movb [X2],B
    case 0x72: // movb [X2],L
    case 0x73: // movb [X2],H
    case 0x74: // movb [X2],[NN+%(i8)s]
    case 0x75: // movb [X2],[HL]
    case 0x76: // movb [X2],[X1]
    case 0x77: // movb [X2],[X2]
    case 0x78: // movb [NN+%(i8)s],A
    case 0x79: // movb [NN+%(i8)s],B
    case 0x7A: // movb [NN+%(i8)s],L
    case 0x7B: // movb [NN+%(i8)s],H
    case 0x7D: // movb [NN+%(i8)s],[HL]
    case 0x7E: // movb [NN+%(i8)s],[X1]
    case 0x7F: // movb [NN+%(i8)s],[X2]
    case 0x80: // incb A
    case 0x81: // incb B
    case 0x82: // incb L
    case 0x83: // incb H
    case 0x84: // incb N
    case 0x85: // incb [NN+%(i8)s]
    case 0x86: // incb [HL]
    case 0x87: // incw SP
    case 0x88: // decb A
    case 0x89: // decb B
    case 0x8A: // decb L
    case 0x8B: // decb H
    case 0x8C: // decb N
    case 0x8D: // decb [NN+%(i8)s]
    case 0x8E: // decb [HL]
    case 0x8F: // decw SP
    case 0x90: // incw BA
    case 0x91: // incw HL
    case 0x92: // incw X1
    case 0x93: // incw X2
    case 0x94: // testb A,B
    case 0x95: // testb [HL],%(i8)s
    case 0x96: // testb A,%(i8)s
    case 0x97: // testb B,%(i8)s
    case 0x98: // decw BA
    case 0x99: // decw HL
    case 0x9A: // decw X1
    case 0x9B: // decw X2
    case 0x9C: // andb FLAGS,%(i8)s
    case 0x9D: // orb FLAGS,%(i8)s
    case 0x9E: // xorb FLAGS,%(i8)s
    case 0x9F: // movb FLAGS,%(i8)s
    case 0xA0: // pushw BA
    case 0xA1: // pushw HL
    case 0xA2: // pushw X
    case 0xA3: // pushw Y
    case 0xA4: // pushb N
    case 0xA5: // pushx HL
    case 0xA6: // pushxxx
    case 0xA7: // pushb FLAGS
    case 0xA8: // popw BA
    case 0xA9: // popw HL
    case 0xAA: // popw X1
    case 0xAB: // popw X2
    case 0xAC: // popb N
    case 0xAD: // popx HL
    case 0xAE: // popxxx
    case 0xAF: // popb FLAGS
    case 0xB0: // movb A,%(i8)s
    case 0xB1: // movb B,%(i8)s
    case 0xB2: // movb L,%(i8)s
    case 0xB3: // movb H,%(i8)s
    case 0xB4: // movw NN,%(i8)s00
    case 0xB5: // movb [HL],%(i8)s
    case 0xB6: // movb [X1],%(i8)s
    case 0xB7: // movb [X2],%(i8)s
    case 0xB8: // movw BA,[%(i16)s]
    case 0xB9: // movw HL,[%(i16)s]
    case 0xBA: // movw X1,[%(i16)s]
    case 0xBB: // movw X2,[%(i16)s]
    case 0xBC: // movw [%(i16)s],BA
	case 0xBD: // movw [%(i16)s],HL
    case 0xBE: // movw [%(i16)s],X1
    case 0xBF: // movw [%(i16)s],X2
    case 0xC0: // addw BA,%(i16)s
    case 0xC1: // addw HL,%(i16)s
    case 0xC2: // addw X1,%(i16)s
    case 0xC3: // addw X2,%(i16)s
    case 0xC4: // movw BA,%(i16)s
    case 0xC5: // movw HL,%(i16)s
    case 0xC6: // movw X1,%(i16)s
    case 0xC7: // movw X2,%(i16)s
    case 0xC8: // xchgw BA,HL
    case 0xC9: // xchgw BA,X1
    case 0xCA: // xchgw BA,X2
    case 0xCB: // xchgw BA,SP
    case 0xCC: // xchgb A,B
    case 0xCD: // xchgb A,[HL]
    case 0xD0: // subw BA,%(i16)s
    case 0xD1: // subw HL,%(i16)s
    case 0xD2: // subw X1,%(i16)s
    case 0xD3: // subw X2,%(i16)s
    case 0xD4: // cmpw BA,%(i16)s
    case 0xD5: // cmpw HL,%(i16)s
    case 0xD6: // cmpw X1,%(i16)s
    case 0xD7: // cmpw X2,%(i16)s
    case 0xD8: // andb [NN+%(i8)s],%(b8)s
    case 0xD9: // orb [NN+%(i8)s],%(b8)s
    case 0xDA: // xorb [NN+%(i8)s],%(b8)s
    case 0xDB: // cmpb [NN+%(i8)s],%(b8)s
    case 0xDC: // testb [NN+%(i8)s],%(b8)s
    case 0xDD: // movb [NN+%(i8)s],%(b8)s
    case 0xDE: // bcde
    case 0xDF: // bcdd
    case 0xE0: // callc %(addr)s
    case 0xE1: // callnc %(addr)s
    case 0xE2: // callz %(addr)s
    case 0xE3: // callnz %(addr)s
    case 0xE4: // jc %(addr)s
    case 0xE5: // jnc %(addr)s
    case 0xE6: // jz %(d8)s
    case 0xE7: // jnz %(addr)s
    case 0xE8: // callcw %(addr)s
    case 0xE9: // callncw %(addr)s
    case 0xEA: // callzw %(addr)s
    case 0xEB: // callnzw %(addr)s
    case 0xEC: // jcw %(addr)s
    case 0xED: // jncw %(addr)s
    case 0xEE: // jzw %(addr)s
    case 0xEF: // jnzw %(addr)s
    case 0xF0: // callb %(addr)s
    case 0xF1: // jmp %(addr)s
    case 0xF2: // callw %(addr)s
    case 0xF3: // jmpw %(addr)s
    case 0xF4: // jmp HL
    case 0xF5: // jdbnz %(addr)s
    case 0xF6: // bcdx A
    case 0xF7: // bcdx [HL]
    case 0xF8: // ret
    case 0xF9: // reti
    case 0xFA: // retskip
    case 0xFB: // call [%(i16)s]
    case 0xFC: // int %(irq)s
    case 0xFD: // jint %(irq)s
    case 0xFF: // nop
