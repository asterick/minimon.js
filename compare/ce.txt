	case 0x00: // addb A, [X1+%(i8)s]
    case 0x01: // addb A, [X2+%(i8)s]
    case 0x02: // addb A, [X1+L]
    case 0x03: // addb A, [X2+L]
    case 0x04: // addb [HL], A
    case 0x05: // addb [HL], %(i8)s
    case 0x06: // addb [HL], [X1]
    case 0x07: // addb [HL], [X2]
    case 0x08: // addcb A, [X1+%(i8)s]
    case 0x09: // addcb A, [X2+%(i8)s]
    case 0x0A: // addcb A, [X1+L]
    case 0x0B: // addcb A, [X2+L]
    case 0x0C: // addcb [HL], A
    case 0x0D: // addcb [HL], %(i8)s
    case 0x0E: // addcb [HL], [X1]
    case 0x0F: // addcb [HL], [X2]
    case 0x10: // subb A, [X1+%(i8)s]
    case 0x11: // subb A, [X2+%(i8)s]
    case 0x12: // subb A, [X1+L]
    case 0x13: // subb A, [X2+L]
    case 0x14: // subb [HL], A
    case 0x15: // subb [HL], %(i8)s
    case 0x16: // subb [HL], [X1]
    case 0x17: // subb [HL], [X2]
    case 0x18: // subcb A, [X1+%(i8)s]
    case 0x19: // subcb A, [X2+%(i8)s]
    case 0x1A: // subcb A, [X1+L]
    case 0x1B: // subcb A, [X2+L]
    case 0x1C: // subcb [HL], A
    case 0x1D: // subcb [HL], %(i8)s
    case 0x1E: // subcb [HL], [X1]
    case 0x1F: // subcb [HL], [X2]
    case 0x20: // andb A, [X1+%(i8)s]		
    case 0x21: // andb A, [X2+%(i8)s]
    case 0x22: // andb A, [X1+L]
    case 0x23: // andb A, [X2+L]
    case 0x24: // andb [HL],A
    case 0x25: // andb [HL],%(i8)s
    case 0x26: // andb [HL],[X1]
    case 0x27: // andb [HL],[X2]
    case 0x28: // orb A, [X1+%(i8)s]
    case 0x29: // orb A, [X2+%(i8)s]
    case 0x2A: // orb A, [X1+L]
    case 0x2B: // orb A, [X2+L]
    case 0x2C: // orb [HL],A
    case 0x2D: // orb [HL],%(i8)s
    case 0x2E: // orb [HL],[X1]
    case 0x2F: // orb [HL],[X2]
    case 0x30: // cmpb A, [X1+%(i8)s]
    case 0x31: // cmpb A, [X2+%(i8)s]
    case 0x32: // cmpb A, [X1+L]
    case 0x33: // cmpb A, [X2+L]
    case 0x34: // cmpb [HL], A
    case 0x35: // cmpb [HL], %(i8)s
    case 0x36: // cmpb [HL], [X1]
    case 0x37: // cmpb [HL], [X2]
    case 0x38: // xorb A, [X1+%(i8)s]
    case 0x39: // xorb A, [X2+%(i8)s]
    case 0x3A: // xorb A, [X1+L]
    case 0x3B: // xorb A, [X2+L]
    case 0x3C: // xorb [HL],A
    case 0x3D: // xorb [HL],%(i8)s
    case 0x3E: // xorb [HL],[X1]
    case 0x3F: // xorb [HL],[X2]
    case 0x40: // movb A,[X1+%(i8)s]
    case 0x41: // movb A,[X2+%(i8)s]
    case 0x42: // movb A,[X1+L]
    case 0x43: // movb A,[X2+L]
    case 0x44: // movb [X1+%(i8)s],A
    case 0x45: // movb [X2+%(i8)s],A
    case 0x46: // movb [X1+L],A
    case 0x47: // movb [X2+L],A
    case 0x48: // movb B,[X1+%(i8)s]
    case 0x49: // movb B,[X2+%(i8)s]
    case 0x4A: // movb B,[X1+L]
    case 0x4B: // movb B,[X2+L]
    case 0x4C: // movb [X1+%(i8)s],B
    case 0x4D: // movb [X2+%(i8)s],B
    case 0x4E: // movb [X1+L],B
    case 0x4F: // movb [X2+L],B
    case 0x50: // movb L,[X1+%(i8)s]
    case 0x51: // movb L,[X2+%(i8)s]
    case 0x52: // movb L,[X1+L]
    case 0x53: // movb L,[X2+L]
    case 0x54: // movb [X1+%(i8)s],L
    case 0x55: // movb [X2+%(i8)s],L
    case 0x56: // movb [X1+L],L
    case 0x57: // movb [X2+L],L
    case 0x58: // movb H,[X1+%(i8)s]
    case 0x59: // movb H,[X2+%(i8)s]
    case 0x5A: // movb H,[X1+L]
    case 0x5B: // movb H,[X2+L]
    case 0x5C: // movb [X1+%(i8)s],H
    case 0x5D: // movb [X2+%(i8)s],H
    case 0x5E: // movb [X1+L],H
    case 0x5F: // movb [X2+L],H
    case 0x60: // movb [HL],[X1+%(i8)s]
    case 0x61: // movb [HL],[X2+%(i8)s]
    case 0x62: // movb [HL],[X1+L]
    case 0x63: // movb [HL],[X2+L]
    case 0x68: // movb [X1],[X1+%(i8)s]
    case 0x69: // movb [X1],[X2+%(i8)s]
    case 0x6A: // movb [X1],[X1+L]
    case 0x6B: // movb [X1],[X2+L]
    case 0x78: // movb [X2],[X1+%(i8)s]
    case 0x79: // movb [X2],[X2+%(i8)s]
    case 0x7A: // movb [X2],[X1+L]
    case 0x7B: // movb [X2],[X2+L]
    case 0x80: // salb A
    case 0x81: // salb B
    case 0x82: // salb [NN+%(i8)s]
    case 0x83: // salb [HL]
    case 0x84: // shlb A
    case 0x85: // shlb B
    case 0x86: // shlb [NN+%(i8)s]
    case 0x87: // shlb [HL]
    case 0x88: // sarb A
    case 0x89: // sarb B
    case 0x8A: // sarb [NN+%(i8)s]
    case 0x8B: // sarb [HL]
    case 0x8C: // shrb A
    case 0x8D: // shrb B
    case 0x8E: // shrb [NN+%(i8)s]
    case 0x8F: // shrb [HL]
    case 0x90: // rolcb A
    case 0x91: // rolcb B
    case 0x92: // rolcb [NN+%(i8)s]
    case 0x93: // rolcb [HL]
    case 0x94: // rolb A
    case 0x95: // rolb B
    case 0x96: // rolb [NN+%(i8)s]
    case 0x97: // rolb [HL]
    case 0x98: // rorcb A
    case 0x99: // rorcb B
    case 0x9A: // rorcb [NN+%(i8)s]
    case 0x9B: // rorcb [HL]
    case 0x9C: // rorb A
    case 0x9D: // rorb B
    case 0x9E: // rorb [NN+%(i8)s]
    case 0x9F: // rorb [HL]
    case 0xA0: // notb A
    case 0xA1: // notb B
    case 0xA2: // notb [NN+%(i8)s]
    case 0xA3: // notb [HL]
    case 0xA4: // negb A
	case 0xA5: // negb B
    case 0xA6: // negb [NN+%(i8)s]
    case 0xA7: // negb [HL]
    case 0xA8: // exts BA,A
    case 0xB0: // andb B,%(i8)s
    case 0xB1: // andb L,%(i8)s
    case 0xB2: // andb H,%(i8)s
	case 0xB4: // orb B,%(i8)s
    case 0xB5: // orb L,%(i8)s
    case 0xB6: // orb H,%(i8)s
    case 0xB8: // xorb B,%(i8)s
    case 0xB9: // xorb L,%(i8)s
    case 0xBA: // xorb H,%(i8)s
    case 0xBC: // cmpb B,%(i8)s
    case 0xBD: // cmpb L,%(i8)s
    case 0xBE: // cmpb H,%(i8)s
    case 0xBF: // cmpb N,%(i8)s
    case 0xC0: // movb A, N
    case 0xC1: // movb A, FLAGS
    case 0xC2: // movb N, A
    case 0xC3: // movb FLAGS, A
    case 0xC4: // movb U, %(i8)s
    case 0xC5: // movx HL,%(i8)s
    case 0xC6: // movx X1,%(i8)s
    case 0xC7: // movx X2,%(i8)s
    case 0xC8: // movb A, V
    case 0xC9: // movx A, HL
    case 0xCA: // movx A, X1 
    case 0xCB: // movx A, X2 
    case 0xCC: // movb U, A
    case 0xCD: // movx HL, A
    case 0xCE: // movx X1, A
    case 0xCF: // movx X2, A
    case 0xD0: // movb A,[%(i16)s]
    case 0xD1: // movb B,[%(i16)s]
    case 0xD2: // movb L,[%(i16)s]
    case 0xD3: // movb H,[%(i16)s]
    case 0xD4: // movb [%(i16)s],A
    case 0xD5: // movb [%(i16)s],B
    case 0xD6: // movb [%(i16)s],L
    case 0xD7: // movb [%(i16)s],H
    case 0xD8: // mul L, A
    case 0xD9: // div HL, A
    case 0xE0: // jlb %(addr)s
    case 0xE1: // jleb %(addr)s
    case 0xE2: // jgb %(addr)s
    case 0xE3: // jgeb %(addr)s
    case 0xE4: // job %(addr)s
    case 0xE5: // jnob %(addr)s
    case 0xE6: // jnsb %(addr)s
    case 0xE7: // jsb %(addr)s
	case 0xE8: // jnex 0, %(addr)s
	case 0xE9: // jnex 1, %(addr)s
	case 0xEA: // jnex 2, %(addr)s
	case 0xEB: // jnex 3, %(addr)s
	case 0xEC: // jex 0, %(addr)s
	case 0xED: // jex 1, %(addr)s
	case 0xEE: // jex 2, %(addr)s
	case 0xEF: // jex 3, %(addr)s
    case 0xF0: // calll %(addr)s
    case 0xF1: // callle %(addr)s
    case 0xF2: // callg %(addr)s
    case 0xF3: // callge %(addr)s
    case 0xF4: // callo %(addr)s
    case 0xF5: // callno %(addr)s
    case 0xF6: // callp %(addr)s
    case 0xF7: // calln %(addr)s
	case 0xF8: // callnex 0, %(addr)s
	case 0xF9: // callnex 1, %(addr)s
	case 0xFA: // callnex 2, %(addr)s
	case 0xFB: // callnex 3, %(addr)s
	case 0xFC: // callex 0, %(addr)s
	case 0xFD: // callex 1, %(addr)s
	case 0xFE: // callex 2, %(addr)s
	case 0xFF: // callex 3, %(addr)s
	case 0xAE:
	case 0xAF:
